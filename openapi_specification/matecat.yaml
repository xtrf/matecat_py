openapi: 3.0.1
info:
  title: MateCat API
  description: We developed a set of Rest API to let you integrate Matecat in your
    translation management system or in any other application. Use our API to create
    projects and check their status.
  version: 2.0.1
servers:
# Added by API Auto Mocking Plugin
- description: SwaggerHub API Auto Mocking
  url: https://virtserver.swaggerhub.com/xtrf/Matecat/2.0.1
- url: /
paths:
  /api/v2/projects/{id_project}/{password}:
    get:
      tags:
      - Project
      summary: Get project information
      description: Retrieve information on the specified Project
      parameters:
      - name: id_project
        in: path
        description: The project ID
        required: true
        schema:
          type: integer
      - name: password
        in: path
        description: The project Password
        required: true
        schema:
          type: string
      responses:
        200:
          description: The metadata for the requested project.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        default:
          description: Unexpected error
          content: {}
  /api/v1/new:
    post:
      tags:
      - Project
      summary: Create new Project on Matecat in detached mode
      description: Create new Project on Matecat With HTTP POST ( multipart/form-data
        ) protocol. new has a maximum file size limit of 200 MB per file and a max
        number of files of 600. This API will process the project creation in background.
        Client can poll the v1 project creation status API to be notified when the
        project is actually created.
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - files
              - project_name
              - source_lang
              - target_lang
              properties:
                files:
                  type: string
                  description: The file(s) to be uploaded. You may also upload your
                    own translation memories (TMX).
                  format: binary
                project_name:
                  type: string
                  description: The name of the project you want create.
                source_lang:
                  type: string
                  description: RFC 5646 language+region Code ( en-US case sensitive
                    ) as specified in W3C standards.
                target_lang:
                  type: string
                  description: RFC 5646 language+region Code ( en-US case sensitive
                    ) as specified in W3C standards. Multiple languages must be comma
                    separated ( it-IT,fr-FR,es-ES case sensitive)
                tms_engine:
                  type: integer
                  description: Identifier for Memory Server 0 means disabled, 1 means
                    MyMemory)
                  format: int32
                  default: 1
                mt_engine:
                  type: integer
                  description: Identifier for Machine Translation Service 0 means
                    disabled, 1 means get MT from MyMemory).
                  format: int32
                  default: 1
                private_tm_key:
                  type: string
                  description: Private key(s) for MyMemory.  If a TMX file is uploaded
                    and no key is provided, a new key will be created. - Existing
                    MyMemory private keys or new to create a new key. - Multiple keys
                    must be comma separated. Up to 5 keys allowed. (xxx345cvf,new,s342f234fc)
                    - If you want to set read, write or both on your private key you
                    can add after the key 'r' for read, 'w' for write or 'rw' for
                    both  separated by ':' (xxx345cvf:r,new:w,s342f234fc:rw) - Only
                    available if tms_engine is set to 1 or if is not used
                subject:
                  type: string
                  description: The subject of the project you want to create.
                  default: general
                segmentation_rule:
                  type: string
                  description: The segmentation rule you want to use to parse your
                    file.
                owner_email:
                  type: string
                  description: The email of the owner of the project. This parameter
                    is deprecated and being replaced by authentication headers.
                  default: anonymous
                due_date:
                  type: string
                  description: If you want to set a due date for your project, send
                    this param with a timestamp
                id_team:
                  type: string
                  description: The team you want to assign this project
                lexiqa:
                  type: string
                  description: Enable lexiQA QA check. Requires purchase of a license
                    from lexiQA.
                  default: "0"
                speech2text:
                  type: integer
                  description: Improved accessibility thanks to a speech-to-text component
                    to dictate your translations instead of typing them.
                  format: int32
                  default: 0
                get_public_matches:
                  type: string
                  description: Enable suggestions from the Public TM
                  default: "true"
                  enum:
                  - "true"
                  - "false"
                pretranslate_100:
                  type: integer
                  description: Pre-translate 100% matches from TM
                  format: int32
                  default: 0
                metadata:
                  type: string
        required: true
      responses:
        200:
          description: The metadata for the created project.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewProject'
        default:
          description: Unexpected error
          content: {}
  /api/status:
    get:
      tags:
      - Project
      summary: Retrieve the status of a project
      description: Check Status of a created Project With HTTP POST ( application/x-www-form-urlencoded
        ) protocol
      parameters:
      - name: id_project
        in: query
        description: The identifier of the project, should be the value returned by
          the /new method.
        required: true
        schema:
          type: integer
      - name: project_pass
        in: query
        description: The password associated with the project, should be the value
          returned by the /new method ( associated with the id_project )
        required: true
        schema:
          type: string
      responses:
        200:
          description: An array of price estimates by product
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        default:
          description: Unexpected error
          content: {}
  /api/change_project_password:
    post:
      tags:
      - Project
      summary: Change password
      description: Change the password of a project.
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - id_project
              - new_pass
              - old_pass
              properties:
                id_project:
                  type: integer
                  description: The id of the project you want to update.
                  format: int32
                old_pass:
                  type: string
                  description: The OLD password of the project you want to update.
                new_pass:
                  type: string
                  description: The NEW password of the project you want to update.
        required: true
      responses:
        200:
          description: An array of price estimates by product
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangePasswordResponse'
        default:
          description: Unexpected error
          content: {}
  /api/v2/projects/{id_project}/{password}/creation_status:
    get:
      tags:
      - Project
      summary: Shows creation status of a project
      description: Shows creation status of a project.
      parameters:
      - name: id_project
        in: path
        description: The id of the project
        required: true
        schema:
          type: string
      - name: password
        in: path
        description: The password of the project
        required: true
        schema:
          type: string
      responses:
        200:
          description: urls
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectCreationStatus'
        default:
          description: Unexpected error
          content: {}
  /api/v2/projects/{id_project}/{password}/completion_status:
    get:
      tags:
      - Project
      summary: Shows project completion statuses
      description: Shows project completion statuses, it is related to the phases
        defined by the click on Marked As Completed button.
      parameters:
      - name: id_project
        in: path
        description: The id of the project
        required: true
        schema:
          type: integer
      - name: password
        in: path
        description: The password of the project
        required: true
        schema:
          type: string
      responses:
        200:
          description: Statuses
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompletionStatusItem'
        default:
          description: Unexpected error
          content: {}
  /api/v2/jobs/{id_job}/{password}:
    get:
      tags:
      - Job
      summary: Job Info
      description: Get all information about a Job
      parameters:
      - name: id_job
        in: path
        description: The id of the job
        required: true
        schema:
          type: string
      - name: password
        in: path
        description: The password of the job (Translate password)
        required: true
        schema:
          type: string
      responses:
        200:
          description: Job Information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Chunk'
        default:
          description: Unexpected error
          content: {}
  /translation/{id_job}/{password}:
    get:
      tags:
      - Job
      summary: Download Translation
      description: Download the Job translation
      parameters:
      - name: id_job
        in: path
        description: The id of the job
        required: true
        schema:
          type: string
      - name: password
        in: path
        description: The password of the job
        required: true
        schema:
          type: string
      responses:
        200:
          description: Job translation
          content: {}
        default:
          description: Unexpected error
          content: {}
  /api/v1/jobs/{id_job}/{password}/stats:
    get:
      tags:
      - Job
      summary: Statistics
      description: Statistics
      parameters:
      - name: id_job
        in: path
        description: The id of the job
        required: true
        schema:
          type: string
      - name: password
        in: path
        description: The password of the job
        required: true
        schema:
          type: string
      responses:
        200:
          description: Statistics
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stats'
        default:
          description: Unexpected error
          content: {}
  /api/v2/jobs/{id_job}/{password}/cancel:
    post:
      tags:
      - Job
      summary: Cancel API
      description: API to cancel a Job
      parameters:
      - name: id_job
        in: path
        description: The id of the job
        required: true
        schema:
          type: string
      - name: password
        in: path
        description: The password of the job
        required: true
        schema:
          type: string
      responses:
        200:
          description: ChangeStatus
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeStatus'
        default:
          description: Unexpected error
          content: {}
  /api/v2/jobs/{id_job}/{password}/archive:
    post:
      tags:
      - Job
      summary: Archive API
      description: API to archive a Job
      parameters:
      - name: id_job
        in: path
        description: The id of the job
        required: true
        schema:
          type: string
      - name: password
        in: path
        description: The password of the job
        required: true
        schema:
          type: string
      responses:
        200:
          description: ChangeStatus
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeStatus'
        default:
          description: Unexpected error
          content: {}
  /api/v2/jobs/{id_job}/{password}/active:
    post:
      tags:
      - Job
      summary: Active API
      description: API to active a Job
      parameters:
      - name: id_job
        in: path
        description: The id of the job
        required: true
        schema:
          type: string
      - name: password
        in: path
        description: The password of the job
        required: true
        schema:
          type: string
      responses:
        200:
          description: ChangeStatus
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeStatus'
        default:
          description: Unexpected error
          content: {}
  /api/v2/projects/{id_project}/{password}/urls:
    get:
      tags:
      - Project
      summary: Urls of a Project
      description: Urls of a Project
      parameters:
      - name: id_project
        in: path
        description: The id of the project
        required: true
        schema:
          type: string
      - name: password
        in: path
        description: The password of the project
        required: true
        schema:
          type: string
      responses:
        200:
          description: urls
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Urls'
        default:
          description: Unexpected error
          content: {}
  /api/v2/projects/{id_project}/{password}/due_date:
    put:
      tags:
      - Project
      summary: Update due date
      description: Update due date given a project
      parameters:
      - name: id_project
        in: path
        description: The id of the project
        required: true
        schema:
          type: string
      - name: password
        in: path
        description: The password of the project
        required: true
        schema:
          type: string
      requestBody:
        description: Date you want to set as due date. Date must be in the future
        content:
          application/json:
            schema:
              required:
              - due_date
              type: object
              properties:
                due_date:
                  type: integer
        required: true
      responses:
        200:
          description: Project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        default:
          description: Unexpected error
          content: {}
      x-codegen-request-body-name: body
    post:
      tags:
      - Project
      summary: Create due date
      description: Create due date given a project
      parameters:
      - name: id_project
        in: path
        description: The id of the project
        required: true
        schema:
          type: string
      - name: password
        in: path
        description: The password of the project
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - due_date
              properties:
                due_date:
                  type: integer
                  description: Date you want to set as due date. Date must be in the
                    future
                  format: int32
        required: true
      responses:
        200:
          description: Project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        default:
          description: Unexpected error
          content: {}
    delete:
      tags:
      - Project
      summary: Delete due date
      description: Delete due date given a project
      parameters:
      - name: id_project
        in: path
        description: The id of the project
        required: true
        schema:
          type: string
      - name: password
        in: path
        description: The password of the project
        required: true
        schema:
          type: string
      responses:
        200:
          description: Project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        default:
          description: Unexpected error
          content: {}
  /api/v2/projects/{id_project}/{password}/cancel:
    post:
      tags:
      - Project
      summary: Cancel API
      description: API to cancel a Project
      parameters:
      - name: id_project
        in: path
        description: The id of the project
        required: true
        schema:
          type: string
      - name: password
        in: path
        description: The password of the project
        required: true
        schema:
          type: string
      responses:
        200:
          description: ChangeStatus
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeStatus'
        default:
          description: Unexpected error
          content: {}
  /api/v2/projects/{id_project}/{password}/archive:
    post:
      tags:
      - Project
      summary: Archive API
      description: API to archive a Project
      parameters:
      - name: id_project
        in: path
        description: The id of the project
        required: true
        schema:
          type: string
      - name: password
        in: path
        description: The password of the project
        required: true
        schema:
          type: string
      responses:
        200:
          description: ChangeStatus
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeStatus'
        default:
          description: Unexpected error
          content: {}
  /api/v2/projects/{id_project}/{password}/active:
    post:
      tags:
      - Project
      summary: Active API
      description: API to active a Project
      parameters:
      - name: id_project
        in: path
        description: The id of the project
        required: true
        schema:
          type: string
      - name: password
        in: path
        description: The password of the project
        required: true
        schema:
          type: string
      responses:
        200:
          description: ChangeStatus
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeStatus'
        default:
          description: Unexpected error
          content: {}
  /api/v2/projects/{id_project}/{password}/jobs/{id_job}/merge:
    post:
      tags:
      - Project
      summary: Merge
      description: Merge a splitted project
      parameters:
      - name: id_project
        in: path
        description: The id of the project
        required: true
        schema:
          type: string
      - name: password
        in: path
        description: The password of the project
        required: true
        schema:
          type: string
      - name: id_job
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: urls
          content: {}
        default:
          description: Unexpected error
          content: {}
  /api/v2/projects/{id_project}/{password}/jobs/{id_job}/{job_password}/split/{num_split}/check:
    post:
      tags:
      - Project
      summary: Split Check
      description: Check a job can be splitted
      parameters:
      - name: id_project
        in: path
        description: The id of the project
        required: true
        schema:
          type: string
      - name: password
        in: path
        description: The password of the project
        required: true
        schema:
          type: string
      - name: id_job
        in: path
        description: The id of the job
        required: true
        schema:
          type: string
      - name: job_password
        in: path
        description: The password of the job
        required: true
        schema:
          type: string
      - name: num_split
        in: path
        description: Number of chuck you want to split
        required: true
        schema:
          type: integer
      responses:
        200:
          description: Split
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Split'
        default:
          description: Unexpected error
          content: {}
  /api/v2/projects/{id_project}/{password}/jobs/{id_job}/{job_password}/split/{num_split}/apply:
    post:
      tags:
      - Project
      summary: Split Job
      description: Check a job can be splitted
      parameters:
      - name: id_project
        in: path
        description: The id of the project
        required: true
        schema:
          type: string
      - name: password
        in: path
        description: The password of the project
        required: true
        schema:
          type: string
      - name: id_job
        in: path
        description: The id of the job
        required: true
        schema:
          type: string
      - name: job_password
        in: path
        description: The password of the job
        required: true
        schema:
          type: string
      - name: num_split
        in: path
        description: Number of chuck you want to split
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                split_values:
                  type: array
                  description: Number of word count values of each chunk returned
                    in split check API
                  items:
                    type: number
      responses:
        200:
          description: Split
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Split'
        default:
          description: Unexpected error
          content: {}
  /api/v2/jobs/{id_job}/{password}/translator:
    get:
      tags:
      - Job
      summary: Gets the translator assigned to a job
      description: Gets the translator assigned to a job.
      parameters:
      - name: id_job
        in: path
        description: The id of the job
        required: true
        schema:
          type: string
      - name: password
        in: path
        description: The password of the job
        required: true
        schema:
          type: string
      responses:
        200:
          description: Job
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobTranslatorItem'
        default:
          description: Unexpected error
          content: {}
    post:
      tags:
      - Job
      summary: Assigns a job to a translator
      description: Assigns a job to a translator.
      parameters:
      - name: id_job
        in: path
        description: The id of the job
        required: true
        schema:
          type: string
      - name: password
        in: path
        description: The password of the job
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
              - delivery_date
              - email
              - timezone
              properties:
                email:
                  type: string
                  description: email of the translator to assign the job
                delivery_date:
                  type: integer
                  description: deliery date for the assignment, expressed as timestamp
                  format: int32
                timezone:
                  type: string
                  description: time zone to convert the delivery_date param expressed
                    as offset based on UTC. Example 1.0, -7.0 etc.
        required: true
      responses:
        200:
          description: Job
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobTranslatorItem'
        default:
          description: Unexpected error
          content: {}
  /api/v2/jobs/{id_job}/{password}/comments:
    get:
      tags:
      - Job
      summary: Get segment comments in a job
      description: Gets the list of comments on all job segments.
      parameters:
      - name: id_job
        in: path
        description: The id of the job
        required: true
        schema:
          type: string
      - name: password
        in: path
        description: The password of the job
        required: true
        schema:
          type: string
      - name: from_id
        in: query
        description: Only return records starting from this id included
        schema:
          type: integer
      responses:
        200:
          description: Comments
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comments'
        default:
          description: Unexpected error
          content: {}
  /api/v2/jobs/{id_job}/{password}/quality-report:
    get:
      tags:
      - Job
      - Quality Report
      summary: Quality report
      description: Quality report
      parameters:
      - name: id_job
        in: path
        description: The id of the job
        required: true
        schema:
          type: string
      - name: password
        in: path
        description: The password of the job
        required: true
        schema:
          type: string
      responses:
        200:
          description: Quality report
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QualityReport'
        default:
          description: Unexpected error
          content: {}
  /api/v2/teams:
    get:
      tags:
      - Teams
      summary: List available teams
      description: Returns a list of all teams the current user is member of.
      responses:
        200:
          description: Teams
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamList'
        default:
          description: Unexpected error
          content: {}
    post:
      tags:
      - Teams
      summary: Create a new team
      description: Creates a new team.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
              - members
              - name
              - type
              properties:
                type:
                  type: string
                name:
                  type: string
                members:
                  type: array
                  description: Array of email addresses of people to invite in a project
                  items:
                    type: string
                    format: email
        required: true
      responses:
        200:
          description: Team
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamItem'
        default:
          description: Unexpected error
          content: {}
  /api/v2/teams/{id_team}:
    put:
      tags:
      - Teams
      summary: Update team
      description: Update team.
      parameters:
      - name: id_team
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        description: Parameters in JSON Body
        content:
          '*/*':
            schema:
              type: object
              properties:
                name:
                  type: string
        required: true
      responses:
        200:
          description: Team
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamItem'
        default:
          description: Unexpected error
          content: {}
      x-codegen-request-body-name: body
  /api/v2/teams/{id_team}/members:
    get:
      tags:
      - Teams
      summary: List team members
      description: List team members.
      parameters:
      - name: id_team
        in: path
        required: true
        schema:
          type: integer
      responses:
        200:
          description: Team
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamMembersList'
        default:
          description: Unexpected error
          content: {}
    post:
      tags:
      - Teams
      summary: Create new team memberships
      description: Create new team memberships.
      parameters:
      - name: id_team
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                members:
                  type: array
                  items:
                    type: string
                    format: email
      responses:
        200:
          description: Team
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamMembersList'
        default:
          description: Unexpected error
          content: {}
  /api/v2/teams/{id_team}/members/{id_member}:
    delete:
      tags:
      - Teams
      summary: List team members
      description: List team members.
      parameters:
      - name: id_team
        in: path
        required: true
        schema:
          type: integer
      - name: id_member
        in: path
        description: Id of the user to remove from team
        required: true
        schema:
          type: integer
      responses:
        200:
          description: Team
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamMembersList'
        default:
          description: Unexpected error
          content: {}
  /api/v2/teams/{id_team}/projects:
    get:
      tags:
      - Teams
      summary: Get the list of projects in a team
      description: Get the list of projects in a team.
      parameters:
      - name: id_team
        in: path
        required: true
        schema:
          type: integer
      responses:
        200:
          description: Team
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectList'
        default:
          description: Unexpected error
          content: {}
  /api/v2/teams/{id_team}/projects/{id_project}:
    get:
      tags:
      - Teams
      summary: Get a project in a team scope
      description: Get a project in a team scope.
      parameters:
      - name: id_team
        in: path
        required: true
        schema:
          type: integer
      - name: id_project
        in: path
        required: true
        schema:
          type: integer
      responses:
        200:
          description: Team
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectItem'
        default:
          description: Unexpected error
          content: {}
    put:
      tags:
      - Teams
      summary: Update a team's project
      description: Updates a team's project.
      parameters:
      - name: id_team
        in: path
        required: true
        schema:
          type: integer
      - name: id_project
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        description: Parameters in JSON Body
        content:
          '*/*':
            schema:
              type: object
              properties:
                id_assignee:
                  type: integer
                id_team:
                  type: integer
                name:
                  type: string
        required: true
      responses:
        200:
          description: Team
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectItem'
        default:
          description: Unexpected error
          content: {}
      x-codegen-request-body-name: body
  /api/v2/teams/{id_team}/projects/{project_name}:
    get:
      tags:
      - Teams
      summary: Get projects in a team scope
      description: Get projects in a team scope by name.
      parameters:
      - name: id_team
        in: path
        required: true
        schema:
          type: integer
      - name: project_name
        in: path
        description: The name can also be a part of a project name
        required: true
        schema:
          type: string
      responses:
        200:
          description: Team
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectsItems'
        default:
          description: Unexpected error
          content: {}
  /api/v2/jobs/{id_job}/{password}/translation-issues:
    get:
      tags:
      - Job
      - Translation Issues
      summary: Project translation issues
      description: Project translation issues
      parameters:
      - name: id_job
        in: path
        description: The id of the job
        required: true
        schema:
          type: string
      - name: password
        in: path
        description: The password of the job (Translate password)
        required: true
        schema:
          type: string
      responses:
        200:
          description: Translation issues
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TranslationIssues'
        default:
          description: Unexpected error
          content: {}
  /api/v2/jobs/{id_job}/{password}/translation-versions:
    get:
      tags:
      - Job
      - Translation Versions
      summary: Project translation versions
      description: Project translation versions
      parameters:
      - name: id_job
        in: path
        description: The id of the job
        required: true
        schema:
          type: string
      - name: password
        in: path
        description: The password of the job (Translate password)
        required: true
        schema:
          type: string
      responses:
        200:
          description: Translation Versions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TranslationVersions'
        default:
          description: Unexpected error
          content: {}
  /api/v2/jobs/{id_job}/{password}/segments/{id_segment}/translation-versions:
    get:
      tags:
      - Job
      - Translation Versions
      summary: Segment versions
      description: Segment versions
      parameters:
      - name: id_job
        in: path
        description: The id of the job
        required: true
        schema:
          type: string
      - name: password
        in: path
        description: The password of the job (Translate password)
        required: true
        schema:
          type: string
      - name: id_segment
        in: path
        description: The id of the segment
        required: true
        schema:
          type: string
      responses:
        200:
          description: Segment versions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TranslationVersions'
        default:
          description: Unexpected error
          content: {}
  /api/v2/jobs/{id_job}/{password}/segments/{id_segment}/translation-versions/{version_number}:
    get:
      tags:
      - Job
      - Translation Versions
      summary: Get a Segment translation version
      description: Get a Segment translation version
      parameters:
      - name: id_job
        in: path
        description: The id of the job
        required: true
        schema:
          type: string
      - name: password
        in: path
        description: The password of the job (Translate password)
        required: true
        schema:
          type: string
      - name: id_segment
        in: path
        description: The id of the segment
        required: true
        schema:
          type: string
      - name: version_number
        in: path
        description: The version number
        required: true
        schema:
          type: string
      responses:
        200:
          description: Segment version
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TranslationVersion'
        default:
          description: Unexpected error
          content: {}
  /api/v2/jobs/{id_job}/{password}/segments/{id_segment}/translation-issues:
    post:
      tags:
      - Job
      - Translation Issues
      summary: Create translation issues
      description: Create translation issues
      parameters:
      - name: id_job
        in: path
        description: The id of the job
        required: true
        schema:
          type: string
      - name: password
        in: path
        description: The password of the job (Translate password)
        required: true
        schema:
          type: string
      - name: id_segment
        in: path
        description: The id of the segment
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - comment
              - end_node
              - end_offset
              - id_category
              - id_job
              - id_segment
              - is_full_segment
              - severity
              - start_node
              - start_offset
              - target_text
              - translation_version
              - version_number
              properties:
                version_number:
                  type: string
                id_segment:
                  type: string
                id_job:
                  type: string
                id_category:
                  type: string
                severity:
                  type: string
                translation_version:
                  type: string
                target_text:
                  type: string
                start_node:
                  type: string
                start_offset:
                  type: string
                end_node:
                  type: string
                end_offset:
                  type: string
                is_full_segment:
                  type: string
                comment:
                  type: string
        required: true
      responses:
        200:
          description: Segment version
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Issue'
        default:
          description: Unexpected error
          content: {}
  /api/v2/jobs/{id_job}/{password}/segments/{id_segment}/translation-issues/{id_issue}:
    post:
      tags:
      - Job
      - Translation Issues
      summary: Update translation issues
      description: Update translation issues
      parameters:
      - name: id_job
        in: path
        description: The id of the job
        required: true
        schema:
          type: string
      - name: password
        in: path
        description: The password of the job (Translate password)
        required: true
        schema:
          type: string
      - name: id_segment
        in: path
        description: The id of the segment
        required: true
        schema:
          type: string
      - name: id_issue
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - rebutted_at
              properties:
                rebutted_at:
                  type: string
        required: true
      responses:
        200:
          description: Update Translation issue
          content: {}
        default:
          description: Unexpected error
          content: {}
    delete:
      tags:
      - Job
      - Translation Issues
      summary: Delete a translation Issue
      description: Delete a translation Issue
      parameters:
      - name: id_job
        in: path
        description: The id of the job
        required: true
        schema:
          type: string
      - name: password
        in: path
        description: The password of the job (Translate password)
        required: true
        schema:
          type: string
      - name: id_segment
        in: path
        description: The id of the segment
        required: true
        schema:
          type: string
      - name: id_issue
        in: path
        description: The id of the issue
        required: true
        schema:
          type: string
      responses:
        200:
          description: Delete
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Issue'
        default:
          description: Unexpected error
          content: {}
  /api/v2/jobs/{id_job}/{password}/segments/{id_segment}/translation-issues/{id_issue}/comments:
    get:
      tags:
      - Job
      - Translation Issues
      summary: Get comments
      description: Get comments
      parameters:
      - name: id_job
        in: path
        description: The id of the job
        required: true
        schema:
          type: string
      - name: password
        in: path
        description: The password of the job (Translate password)
        required: true
        schema:
          type: string
      - name: id_segment
        in: path
        description: The id of the segment
        required: true
        schema:
          type: string
      - name: id_issue
        in: path
        description: The id of the issue
        required: true
        schema:
          type: string
      responses:
        200:
          description: Get comments
          content: {}
        default:
          description: Unexpected error
          content: {}
    post:
      tags:
      - Job
      - Translation Issues
      summary: Add comment to a translation issue
      description: Create a comment translation issue
      parameters:
      - name: id_job
        in: path
        description: The id of the job
        required: true
        schema:
          type: string
      - name: password
        in: path
        description: The password of the job (Translate password)
        required: true
        schema:
          type: string
      - name: id_segment
        in: path
        description: The id of the segment
        required: true
        schema:
          type: string
      - name: id_issue
        in: path
        description: The id of the issue
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - comment
              - id_qa_entry
              - source_page
              - uid
              properties:
                comment:
                  type: string
                id_qa_entry:
                  type: string
                source_page:
                  type: string
                uid:
                  type: string
        required: true
      responses:
        200:
          description: Add comment
          content: {}
        default:
          description: Unexpected error
          content: {}
  /api/v2/jobs/{id_job}/{password}/options:
    post:
      tags:
      - Job
      - Options
      summary: Update Options
      description: Update Options (speech2text, guess tags, lexiqa)
      parameters:
      - name: id_job
        in: path
        description: The id of the job
        required: true
        schema:
          type: string
      - name: password
        in: path
        description: The password of the job (Translate password)
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                speech2text:
                  type: boolean
                  description: To enable Speech To Text option
                tag_projection:
                  type: boolean
                  description: To enable Guess Tags option
                lexiqa:
                  type: boolean
                  description: To enable lexiqa option
      responses:
        200:
          description: Update Options
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Options'
        default:
          description: Unexpected error
          content: {}
  /TMX/{id_job}/{password}:
    post:
      tags:
      - Job
      summary: Download Job TMX
      description: 'Download the Job TMX '
      parameters:
      - name: id_job
        in: path
        description: The id of the job
        required: true
        schema:
          type: string
      - name: password
        in: path
        description: The password of the job (Translate password)
        required: true
        schema:
          type: string
      responses:
        200:
          description: Job TMX
          content: {}
        default:
          description: Unexpected error
          content: {}
  /api/v2/glossaries/import/:
    post:
      tags:
      - Glossary
      summary: Import Glossary
      description: Import glossary file (.xlsx)
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - files
              properties:
                files:
                  type: string
                  description: The file(s) to be uploaded
                  format: binary
                name:
                  type: string
                  description: The file name.
                tm_key:
                  type: string
                  description: The tm key.
        required: true
      responses:
        200:
          description: Import Glossary
          content: {}
        default:
          description: Unexpected error
          content: {}
  /api/v2/glossaries/import/status/{tm_key}:
    get:
      tags:
      - Glossary
      summary: Glossary Upload status.
      description: Glossary Upload status.
      parameters:
      - name: tm_key
        in: path
        description: The tm key.
        required: true
        schema:
          type: string
      - name: name
        in: query
        description: The file name.
        schema:
          type: string
      responses:
        200:
          description: Glossary Upload status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadGlossaryStatusObject'
        default:
          description: Unexpected error
          content: {}
  /api/v2/glossaries/export/{tm_key}:
    get:
      tags:
      - Glossary
      summary: Download Glossary
      description: download Glossary
      parameters:
      - name: tm_key
        in: path
        description: The tm key.
        required: true
        schema:
          type: string
      responses:
        200:
          description: Glossary
          content: {}
        default:
          description: Unexpected error
          content: {}
  /api/v2/engines/list:
    get:
      tags:
      - Engines
      summary: Retrieve personal engine list.
      description: Retrieve personal engine list ( Google, Microsoft, etc. ).
      responses:
        200:
          description: Engine List
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnginesList'
        default:
          description: Unexpected error
          content: {}
  /api/v2/keys/list:
    get:
      tags:
      - TM keys
      summary: Retrieve private TM keys list.
      description: Retrieve private TM keys list.
      responses:
        200:
          description: Keys List
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeysList'
        default:
          description: Unexpected error
          content: {}
  /api/v2/languages:
    get:
      tags:
      - Languages
      summary: Supported languages list.
      description: List of supported languages.
      responses:
        200:
          description: Languages List
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Languages'
        default:
          description: Unexpected error
          content: {}
components:
  schemas:
    NewProject:
      type: object
      properties:
        status:
          type: string
          description: Return the creation status of the project. The statuses can
            be:OK indicating that the creation worked.FAIL indicating that the creation
            is failed.
          enum:
          - OK
          - FAIL
        id_project:
          type: string
          description: Return the unique id of the project just created. If creation
            status is FAIL this key will simply be omitted from the result.
        project_pass:
          type: string
          description: Return the password of the project just created. If creation
            status is FAIL this key will simply be omitted from the result.
        new_keys:
          type: string
          description: If you specified new as one or more value in the private_tm_key
            parameter, the new created keys are returned as CSV string (4rcf34rc,r34rcfewf3r2).
            Otherwise empty string is returned
    Status:
      type: object
      properties:
        errors:
          type: array
          description: A list of objects containing error message at system wide level.
            Every error has a negative numeric code and a textual message ( currently
            the only error reported is the wrong version number in config.inc.php
            file and happens only after Matecat updates, so you should never see it
            ).
          items:
            type: object
            properties: {}
        data:
          $ref: '#/components/schemas/Data-Status'
        status:
          type: string
          description: The analysis status of the project. ANALYZING - analysis/creation
            still in progress; NO_SEGMENTS_FOUND - the project has no segments to
            analyze (have you uploaded a file containing only images?); ANALYSIS_NOT_ENABLED
            - no analysis will be performed because of Matecat configuration; DONE
            - the analysis/creation is completed; FAIL - the analysis/creation is
            failed.
          enum:
          - ANALYZING
          - NO_SEGMENTS_FOUND
          - ANALYSIS_NOT_ENABLED
          - DONE
          - FAIL
        analyze:
          type: string
          description: A link to the analyze page; it's a human readable version of
            this API output
        jobs:
          $ref: '#/components/schemas/Jobs-Status'
    Data-Status:
      type: object
      properties:
        jobs:
          $ref: '#/components/schemas/Jobs'
        summary:
          $ref: '#/components/schemas/Summary'
      description: Holds all progress statisticts for every job and for overall project.
        It contains jobs and summary sub-sections.
    Jobs-Status:
      type: object
      properties:
        langpairs:
          type: object
          properties: {}
          description: the language pairs for your project; an entry for every chunk
            in the project, with the id-password combination as key and the language
            pair as the value
        job-url:
          type: object
          properties: {}
          description: the links to the chunks of the project; an entry for every
            chunk in the project, with the id-password combination as key and the
            link to the chunk as the value.
        job-quality-details:
          type: array
          description: a structure containing, for each chunk, an array of 5 objects,
            each object is a quality check performed on the job; the object contains
            the type of the check (Typing, Translation, Terminology, Language Quality,
            Style), the quantity of errors found, the allowed errors threshold and
            the rating given by the errors/threshold ratio (same as quality-overall)
          items:
            type: object
            properties: {}
        quality-overall:
          type: object
          properties: {}
          description: the overall quality rating for each chunk (Very good, Good,
            Acceptable, Poor, Fail)
      description: Section jobs contains all metadata about job (like URIs, quality
        reports and languages)
    Summary:
      type: object
      properties:
        NAME:
          type: string
          description: A list of objects containing error message at system wide level.
            Every error has a negative numeric code and a textual message ( currently
            the only error reported is the wrong version number in config.inc.php
            file and happens only after Matecat updates, so you should never see it
            ).
        STATUS:
          type: string
          description: The status the project is from analysis perspective. NEW -
            just created, not analyzed yet, FAST_OK - preliminary (fast) analysis
            completed, now running translations ("TM") analysis, DONE - analysis complete.
          enum:
          - NEW
          - FAST_OK
          - DONE
        IN_QUEUE_BEFORE:
          type: string
          description: Number of segments belonging to other projects that are being
            analyzed before yours; it's the wait time for you.
        TOTAL_SEGMENTS:
          type: string
          description: number of segments belonging to your project.
        SEGMENTS_ANALYZED:
          type: string
          description: analysis progress, on TOTAL_SEGMENTS
        TOTAL_RAW_WC:
          type: string
          description: number of words (word count) of your project, as extracted
            by the textual parsers
        TOTAL_STANDARD_WC:
          type: string
          description: word count, minus the sentences that are repeated
        TOTAL_FAST_WC:
          type: string
          description: word count, minus the sentences that are partially repeated
        TOTAL_TM_WC:
          type: string
          description: word count, with sentences found in the cloud translation memory
            discounted from the total; this depends on the percentage of overlapping
            between the sentences of your project and the past translations
        TOTAL_PAYABLE:
          type: string
          description: total word count, after analysis.
      description: Sub-section summary holds statistict for the whole project that
        are not related to single job objects.
    Jobs:
      type: object
      properties:
        id_job:
          $ref: '#/components/schemas/Job'
      description: Sub-section jobs holds statistict for all the job objects. The
        numerical keys on the first level are the IDs of the jobs contained in the
        project. Each job identifies a target language; as such, there is a 1-1 mapping
        between ID and target languages in your project. A job holds a chunks and
        a totals section.
    Job:
      type: object
      properties:
        chunk:
          type: object
          properties: {}
          description: A structure modeling a portion of content to translate.  A
            whole file can be splitted in multiple chunks, to be distributed to multiple
            translators, or can be enveloped in a single chunk. Each chunk has a password
            as first level key and a numerical ID as second level key to identify
            different chunks for the same file. Each chunk contains the same structure
            of the totals section. The sum of the chunks equals to the totals.
        totals:
          $ref: '#/components/schemas/Totals'
      description: The numerical keys on the first level are the IDs of the jobs contained
        in the project. Each job identifies a target language; as such, there is a
        1-1 mapping between ID and target languages in your project.
    Totals:
      type: object
      properties:
        job_pass:
          $ref: '#/components/schemas/Total'
      description: Contains all analysis statistics for all files in the current job
        (i.e., all files that have to be translated in a target language)
    Total:
      type: object
      properties:
        TOTAL_PAYABLE:
          type: array
          description: total word count, after analysis
          items:
            type: object
            properties: {}
        REPETITIONS:
          type: array
          description: cumulative word count for the segments that repeat themselves
            in the file
          items:
            type: object
            properties: {}
        INTERNAL_MATCHES:
          type: array
          description: cumulative word count for the segments that fuzzily overlap
            with others in the file, while not being an exact repetition
          items:
            type: object
            properties: {}
        MT:
          type: array
          description: cumulative word count for all segments that can be translated
            with machine translation; it accounts for all the information that could
            not be discounted by repetitions, internal matches or translation memory
          items:
            type: object
            properties: {}
        NEW:
          type: array
          description: cumulative word count for segments that can't be discounted
            with repetition or internal matches; it's the net translation effort
          items:
            type: object
            properties: {}
        TM_100:
          type: array
          description: cumulative word count for the exact matches found in TM server
          items:
            type: object
            properties: {}
        TM_75_99:
          type: array
          description: cumulative word count for partial matches in the TM that cover
            75-99% of each segment
          items:
            type: object
            properties: {}
        ICE:
          type: array
          description: cumulative word count for 100% TM matches that also share the
            same context with the TM
          items:
            type: object
            properties: {}
        NUMBERS_ONLY:
          type: array
          description: cumulative word counts for segments made of numberings, dates
            and similar not translatable data ( i.e. 93 / 127 )
          items:
            type: object
            properties: {}
      description: password as first level key.
    ChangePasswordResponse:
      type: object
      properties:
        status:
          type: string
          description: Return the exit status of the action. The statuses can be OK
            or FAIL
          enum:
          - OK
          - FAIL
        id_project:
          type: string
          description: Returns the id of the project just updated
        project_pass:
          type: string
          description: Returns the new pass of the project just updated
        message:
          type: string
          description: Return the error message for the action if the status is FAIL
    Stats:
      type: object
      properties:
        id:
          type: integer
        DRAFT:
          type: number
        TRANSLATED:
          type: number
        APPROVED:
          type: number
        REJECTED:
          type: number
        TOTAL:
          type: number
        PROGRESS:
          type: number
        TOTAL_FORMATTED:
          type: number
        PROGRESS_FORMATTED:
          type: string
        APPROVED_FORMATTED:
          type: string
        REJECTED_FORMATTED:
          type: string
        DRAFT_FORMATTED:
          type: string
        TRANSLATED_FORMATTED:
          type: string
        APPROVED_PERC:
          type: number
        REJECTED_PERC:
          type: number
        DRAFT_PERC:
          type: number
        TRANSLATED_PERC:
          type: number
        PROGRESS_PERC:
          type: number
        TRANSLATED_PERC_FORMATTED:
          type: number
        DRAFT_PERC_FORMATTED:
          type: number
        APPROVED_PERC_FORMATTED:
          type: number
        REJECTED_PERC_FORMATTED:
          type: number
        PROGRESS_PERC_FORMATTED:
          type: number
        TODO_FORMATTED:
          type: string
        DOWNLOAD_STATUS:
          type: string
        ANALYSIS_COMPLETE:
          type: string
    Urls:
      type: object
      properties:
        files:
          $ref: '#/components/schemas/Files'
        jobs:
          $ref: '#/components/schemas/UrlsJobs'
    Files:
      type: array
      items:
        $ref: '#/components/schemas/JobFile'
    JobFile:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        original_download_url:
          type: string
        translation_download_url:
          type: string
        xliff_download_url:
          type: string
    UrlsJobs:
      type: array
      items:
        $ref: '#/components/schemas/UrlsJob'
    UrlsJob:
      type: object
      properties:
        id:
          type: string
        target_lang:
          type: string
        chunks:
          type: array
          items:
            $ref: '#/components/schemas/Url'
    Url:
      type: object
      properties:
        password:
          type: string
        translate_url:
          type: string
        revise_url:
          type: string
    TranslationIssues:
      type: array
      items:
        $ref: '#/components/schemas/Issue'
    Issue:
      type: object
      properties:
        comment:
          type: string
        created_at:
          type: string
        id:
          type: string
        id_category:
          type: string
        id_job:
          type: string
        id_segment:
          type: string
        is_full_segment:
          type: string
        severity:
          type: string
        start_node:
          type: string
        start_offset:
          type: string
        end_node:
          type: string
        end_offset:
          type: string
        translation_version:
          type: string
        target_text:
          type: string
        penality_points:
          type: string
        rebutted_at:
          type: string
    Comments:
      type: array
      items:
        $ref: '#/components/schemas/Comment'
    Comment:
      type: object
      properties:
        id:
          type: string
        id_job:
          type: string
        id_segment:
          type: string
        created_at:
          type: string
        email:
          type: string
        full_name:
          type: string
        uid:
          type: integer
          format: int32
        resolved_at:
          type: string
        source_page:
          type: integer
          format: int32
        mwssage_type:
          type: integer
          format: int32
        message:
          type: string
    QualityReport:
      type: object
      properties:
        chunk:
          type: object
          properties: {}
        job:
          type: object
          properties: {}
        project:
          type: object
          properties: {}
    TranslationVersions:
      type: array
      items:
        $ref: '#/components/schemas/TranslationVersion'
    TranslationVersion:
      type: object
      properties:
        id:
          type: integer
          format: int32
        id_segment:
          type: integer
          format: int32
        id_job:
          type: integer
          format: int32
        translation:
          type: string
        version_number:
          type: string
        propagated_from:
          type: integer
          format: int32
        created_at:
          type: string
    Options:
      type: object
      properties:
        speech2text:
          type: integer
        tag_projection:
          type: integer
        lexiqa:
          type: integer
    UploadGlossaryStatusObject:
      type: object
      properties:
        error:
          type: array
          items:
            type: object
            properties: {}
        data:
          $ref: '#/components/schemas/UploadGlossaryStatus'
        success:
          type: boolean
    UploadGlossaryStatus:
      type: object
      properties:
        done:
          type: integer
        total:
          type: integer
        source_lang:
          type: string
        target_lang:
          type: string
        completed:
          type: boolean
    Languages:
      type: array
      items:
        $ref: '#/components/schemas/Language'
    Language:
      type: object
      properties:
        code:
          type: string
          description: Rfc code
        name:
          type: string
          description: Language name
        direction:
          type: string
          description: Language direction, ltr (left-to-right text) or rtl (right-to-left
            text)
          enum:
          - ltr
          - rtl
    PendingInvitation:
      type: array
      items:
        type: string
        description: Email address of the invited user
    TeamMembersList:
      type: object
      properties:
        members:
          type: array
          items:
            $ref: '#/components/schemas/TeamMember'
        pending_invitations:
          type: array
          items:
            $ref: '#/components/schemas/PendingInvitation'
    TeamMember:
      type: object
      properties:
        id:
          type: integer
        id_team:
          type: integer
        user:
          $ref: '#/components/schemas/User'
    User:
      type: object
      properties:
        uid:
          type: integer
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
        has_password:
          type: boolean
    TeamList:
      type: object
      properties:
        teams:
          type: array
          items:
            $ref: '#/components/schemas/Team'
    TeamItem:
      type: object
      properties:
        team:
          $ref: '#/components/schemas/Team'
    Team:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        type:
          type: string
          enum:
          - general
          - personal
        created_at:
          type: string
          format: date-time
        created_by:
          type: integer
        pending_invitations:
          type: array
          items:
            type: object
    EnginesList:
      type: array
      items:
        $ref: '#/components/schemas/Engine'
    Engine:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        type:
          type: string
          enum:
          - MT
          - TM
        description:
          type: string
    KeysList:
      type: object
      properties:
        private_keys:
          type: array
          items:
            $ref: '#/components/schemas/Key'
        shared_keys:
          type: array
          items:
            $ref: '#/components/schemas/Key'
    Key:
      type: object
      properties:
        key:
          type: string
        name:
          type: string
    ProjectList:
      type: object
      properties:
        projects:
          type: array
          items:
            $ref: '#/components/schemas/Project'
    ProjectItem:
      type: object
      properties:
        project:
          $ref: '#/components/schemas/Project'
    ProjectsItems:
      type: object
      properties:
        projects:
          type: array
          items:
            $ref: '#/components/schemas/Project'
    Project:
      type: object
      properties:
        id:
          type: integer
        password:
          type: string
        name:
          type: string
        id_team:
          type: integer
        id_assignee:
          type: integer
        create_date:
          type: string
          format: date-time
        project_slug:
          type: string
        features:
          type: string
        is_cancelled:
          type: boolean
        is_archived:
          type: boolean
        remote_file_service:
          type: string
        jobs:
          type: array
          items:
            $ref: '#/components/schemas/ExtendedJob'
    CompletionStatusItem:
      type: object
      properties:
        project_status:
          type: object
          properties:
            revise:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                  password:
                    type: string
                  completed:
                    type: boolean
                  completed_at:
                    type: string
                    format: date-time
                  event_id:
                    type: string
            translate:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                  password:
                    type: string
                  completed:
                    type: boolean
                  completed_at:
                    type: string
                    format: date-time
                  event_id:
                    type: string
            id:
              type: string
            completed:
              type: boolean
    Chunk:
      type: object
      properties:
        id:
          type: integer
        chunks:
          type: array
          items:
            $ref: '#/components/schemas/ExtendedJob'
    ExtendedJob:
      type: object
      properties:
        id:
          type: integer
        password:
          type: string
        source:
          type: string
        target:
          type: string
        sourceTxt:
          type: string
        targetTxt:
          type: string
        status:
          type: string
        subject:
          type: string
        owner:
          type: string
          format: email
        open_threads_count:
          type: integer
        create_timestamp:
          type: integer
        created_at:
          type: string
          format: date-time
        create_date:
          type: string
          format: date-time
        formatted_create_date:
          type: string
        quality_overall:
          type: string
        pee:
          type: integer
        tte:
          type: integer
          format: seconds
        private_tm_key:
          type: array
          items:
            type: string
        warnings_count:
          type: integer
        warning_segments:
          type: array
          items:
            type: integer
        outsource:
          $ref: '#/components/schemas/OutsourceConfirmation'
        translator:
          $ref: '#/components/schemas/Translator'
        urls:
          $ref: '#/components/schemas/JobUrl'
        stats:
          $ref: '#/components/schemas/Stats'
        quality_summary:
          $ref: '#/components/schemas/QualitySummary'
    QualitySummary:
      type: object
      properties:
        equivalent_class:
          type: integer
        quality_overall:
          type: string
        errors_count:
          type: integer
        revise_issues:
          type: object
          properties:
            typing:
              $ref: '#/components/schemas/ReviseIssue'
            translation:
              $ref: '#/components/schemas/ReviseIssue'
            terminology:
              $ref: '#/components/schemas/ReviseIssue'
            language_quality:
              $ref: '#/components/schemas/ReviseIssue'
            style:
              $ref: '#/components/schemas/ReviseIssue'
    ReviseIssue:
      type: object
      properties:
        allowed:
          type: number
        found:
          type: integer
    JobUrl:
      type: object
      properties:
        translate_url:
          type: string
        revise_url:
          type: string
        original_download_url:
          type: string
        translation_download_url:
          type: string
        xliff_download_url:
          type: string
    JobTranslatorItem:
      type: object
      properties:
        id:
          type: integer
        translator:
          $ref: '#/components/schemas/Translator'
    Translator:
      type: object
      properties:
        email:
          type: string
          format: email
        added_by:
          type: integer
        delivery_date:
          type: string
        delivery_timestamp:
          type: string
        source:
          type: string
        target:
          type: string
        id_translator_profile:
          type: integer
        user:
          $ref: '#/components/schemas/User'
    OutsourceConfirmation:
      type: object
      properties:
        create_timestamp:
          type: string
          format: date-time
        delivery_timestamp:
          type: integer
        quote_review_link:
          type: object
    ExtendedJobItem:
      type: object
      properties:
        job:
          $ref: '#/components/schemas/ExtendedJob'
    ProjectCreationStatus:
      type: object
      properties:
        status:
          type: integer
        message:
          type: string
        id_project:
          type: integer
        project_pass:
          type: string
        project_name:
          type: string
        new_keys:
          type: string
        analyze_url:
          type: string
    Error:
      type: object
      properties:
        errors:
          type: array
          items:
            type: object
            properties:
              code:
                type: object
              message:
                type: object
        data:
          type: array
          description: This property contains any debug data that can serve for better
            understanding of the error
          items:
            type: object
            properties: {}
    Split:
      type: object
      properties:
        data:
          type: object
          properties:
            raw_word_count:
              type: object
            eq_word_count:
              type: object
            job_first_segment:
              type: object
            job_last_segment:
              type: object
            id:
              type: object
            show_in_cattool:
              type: object
            chunks:
              type: array
              items:
                type: object
                properties:
                  eq_word_count:
                    type: object
                  raw_word_count:
                    type: object
                  segment_start:
                    type: object
                  segment_end:
                    type: object
                  last_opened_segment:
                    type: object
    ChangeStatus:
      type: object
      properties:
        code:
          type: integer
        data:
          type: string
        status:
          type: string
          enum:
          - active
          - cancelled
          - archived
    Segment:
      type: object
      properties:
        id_segment:
          type: integer
        autopropagated_from:
          type: string
        status:
          type: string
        translation:
          type: string
        translation_date:
          type: string
        match_type:
          type: string
        context_hash:
          type: string
        locked:
          type: integer
        version_number:
          type: integer
        issues:
          type: array
          items:
            $ref: '#/components/schemas/Issue'
