# coding: utf-8

"""
    MateCat API

    We developed a set of Rest API to let you integrate Matecat in your translation management system or in any other application. Use our API to create projects and check their status.  # noqa: E501

    OpenAPI spec version: 2.0.1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class Stats(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'id': 'int',
        'draft': 'float',
        'translated': 'float',
        'approved': 'float',
        'rejected': 'float',
        'total': 'float',
        'progress': 'float',
        'total_formatted': 'float',
        'progress_formatted': 'str',
        'approved_formatted': 'str',
        'rejected_formatted': 'str',
        'draft_formatted': 'str',
        'translated_formatted': 'str',
        'approved_perc': 'float',
        'rejected_perc': 'float',
        'draft_perc': 'float',
        'translated_perc': 'float',
        'progress_perc': 'float',
        'translated_perc_formatted': 'float',
        'draft_perc_formatted': 'float',
        'approved_perc_formatted': 'float',
        'rejected_perc_formatted': 'float',
        'progress_perc_formatted': 'float',
        'todo_formatted': 'str',
        'download_status': 'str',
        'analysis_complete': 'str'
    }

    attribute_map = {
        'id': 'id',
        'draft': 'DRAFT',
        'translated': 'TRANSLATED',
        'approved': 'APPROVED',
        'rejected': 'REJECTED',
        'total': 'TOTAL',
        'progress': 'PROGRESS',
        'total_formatted': 'TOTAL_FORMATTED',
        'progress_formatted': 'PROGRESS_FORMATTED',
        'approved_formatted': 'APPROVED_FORMATTED',
        'rejected_formatted': 'REJECTED_FORMATTED',
        'draft_formatted': 'DRAFT_FORMATTED',
        'translated_formatted': 'TRANSLATED_FORMATTED',
        'approved_perc': 'APPROVED_PERC',
        'rejected_perc': 'REJECTED_PERC',
        'draft_perc': 'DRAFT_PERC',
        'translated_perc': 'TRANSLATED_PERC',
        'progress_perc': 'PROGRESS_PERC',
        'translated_perc_formatted': 'TRANSLATED_PERC_FORMATTED',
        'draft_perc_formatted': 'DRAFT_PERC_FORMATTED',
        'approved_perc_formatted': 'APPROVED_PERC_FORMATTED',
        'rejected_perc_formatted': 'REJECTED_PERC_FORMATTED',
        'progress_perc_formatted': 'PROGRESS_PERC_FORMATTED',
        'todo_formatted': 'TODO_FORMATTED',
        'download_status': 'DOWNLOAD_STATUS',
        'analysis_complete': 'ANALYSIS_COMPLETE'
    }

    def __init__(self, id=None, draft=None, translated=None, approved=None, rejected=None, total=None, progress=None, total_formatted=None, progress_formatted=None, approved_formatted=None, rejected_formatted=None, draft_formatted=None, translated_formatted=None, approved_perc=None, rejected_perc=None, draft_perc=None, translated_perc=None, progress_perc=None, translated_perc_formatted=None, draft_perc_formatted=None, approved_perc_formatted=None, rejected_perc_formatted=None, progress_perc_formatted=None, todo_formatted=None, download_status=None, analysis_complete=None):  # noqa: E501
        """Stats - a model defined in Swagger"""  # noqa: E501
        self._id = None
        self._draft = None
        self._translated = None
        self._approved = None
        self._rejected = None
        self._total = None
        self._progress = None
        self._total_formatted = None
        self._progress_formatted = None
        self._approved_formatted = None
        self._rejected_formatted = None
        self._draft_formatted = None
        self._translated_formatted = None
        self._approved_perc = None
        self._rejected_perc = None
        self._draft_perc = None
        self._translated_perc = None
        self._progress_perc = None
        self._translated_perc_formatted = None
        self._draft_perc_formatted = None
        self._approved_perc_formatted = None
        self._rejected_perc_formatted = None
        self._progress_perc_formatted = None
        self._todo_formatted = None
        self._download_status = None
        self._analysis_complete = None
        self.discriminator = None
        if id is not None:
            self.id = id
        if draft is not None:
            self.draft = draft
        if translated is not None:
            self.translated = translated
        if approved is not None:
            self.approved = approved
        if rejected is not None:
            self.rejected = rejected
        if total is not None:
            self.total = total
        if progress is not None:
            self.progress = progress
        if total_formatted is not None:
            self.total_formatted = total_formatted
        if progress_formatted is not None:
            self.progress_formatted = progress_formatted
        if approved_formatted is not None:
            self.approved_formatted = approved_formatted
        if rejected_formatted is not None:
            self.rejected_formatted = rejected_formatted
        if draft_formatted is not None:
            self.draft_formatted = draft_formatted
        if translated_formatted is not None:
            self.translated_formatted = translated_formatted
        if approved_perc is not None:
            self.approved_perc = approved_perc
        if rejected_perc is not None:
            self.rejected_perc = rejected_perc
        if draft_perc is not None:
            self.draft_perc = draft_perc
        if translated_perc is not None:
            self.translated_perc = translated_perc
        if progress_perc is not None:
            self.progress_perc = progress_perc
        if translated_perc_formatted is not None:
            self.translated_perc_formatted = translated_perc_formatted
        if draft_perc_formatted is not None:
            self.draft_perc_formatted = draft_perc_formatted
        if approved_perc_formatted is not None:
            self.approved_perc_formatted = approved_perc_formatted
        if rejected_perc_formatted is not None:
            self.rejected_perc_formatted = rejected_perc_formatted
        if progress_perc_formatted is not None:
            self.progress_perc_formatted = progress_perc_formatted
        if todo_formatted is not None:
            self.todo_formatted = todo_formatted
        if download_status is not None:
            self.download_status = download_status
        if analysis_complete is not None:
            self.analysis_complete = analysis_complete

    @property
    def id(self):
        """Gets the id of this Stats.  # noqa: E501


        :return: The id of this Stats.  # noqa: E501
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Stats.


        :param id: The id of this Stats.  # noqa: E501
        :type: int
        """

        self._id = id

    @property
    def draft(self):
        """Gets the draft of this Stats.  # noqa: E501


        :return: The draft of this Stats.  # noqa: E501
        :rtype: float
        """
        return self._draft

    @draft.setter
    def draft(self, draft):
        """Sets the draft of this Stats.


        :param draft: The draft of this Stats.  # noqa: E501
        :type: float
        """

        self._draft = draft

    @property
    def translated(self):
        """Gets the translated of this Stats.  # noqa: E501


        :return: The translated of this Stats.  # noqa: E501
        :rtype: float
        """
        return self._translated

    @translated.setter
    def translated(self, translated):
        """Sets the translated of this Stats.


        :param translated: The translated of this Stats.  # noqa: E501
        :type: float
        """

        self._translated = translated

    @property
    def approved(self):
        """Gets the approved of this Stats.  # noqa: E501


        :return: The approved of this Stats.  # noqa: E501
        :rtype: float
        """
        return self._approved

    @approved.setter
    def approved(self, approved):
        """Sets the approved of this Stats.


        :param approved: The approved of this Stats.  # noqa: E501
        :type: float
        """

        self._approved = approved

    @property
    def rejected(self):
        """Gets the rejected of this Stats.  # noqa: E501


        :return: The rejected of this Stats.  # noqa: E501
        :rtype: float
        """
        return self._rejected

    @rejected.setter
    def rejected(self, rejected):
        """Sets the rejected of this Stats.


        :param rejected: The rejected of this Stats.  # noqa: E501
        :type: float
        """

        self._rejected = rejected

    @property
    def total(self):
        """Gets the total of this Stats.  # noqa: E501


        :return: The total of this Stats.  # noqa: E501
        :rtype: float
        """
        return self._total

    @total.setter
    def total(self, total):
        """Sets the total of this Stats.


        :param total: The total of this Stats.  # noqa: E501
        :type: float
        """

        self._total = total

    @property
    def progress(self):
        """Gets the progress of this Stats.  # noqa: E501


        :return: The progress of this Stats.  # noqa: E501
        :rtype: float
        """
        return self._progress

    @progress.setter
    def progress(self, progress):
        """Sets the progress of this Stats.


        :param progress: The progress of this Stats.  # noqa: E501
        :type: float
        """

        self._progress = progress

    @property
    def total_formatted(self):
        """Gets the total_formatted of this Stats.  # noqa: E501


        :return: The total_formatted of this Stats.  # noqa: E501
        :rtype: float
        """
        return self._total_formatted

    @total_formatted.setter
    def total_formatted(self, total_formatted):
        """Sets the total_formatted of this Stats.


        :param total_formatted: The total_formatted of this Stats.  # noqa: E501
        :type: float
        """

        self._total_formatted = total_formatted

    @property
    def progress_formatted(self):
        """Gets the progress_formatted of this Stats.  # noqa: E501


        :return: The progress_formatted of this Stats.  # noqa: E501
        :rtype: str
        """
        return self._progress_formatted

    @progress_formatted.setter
    def progress_formatted(self, progress_formatted):
        """Sets the progress_formatted of this Stats.


        :param progress_formatted: The progress_formatted of this Stats.  # noqa: E501
        :type: str
        """

        self._progress_formatted = progress_formatted

    @property
    def approved_formatted(self):
        """Gets the approved_formatted of this Stats.  # noqa: E501


        :return: The approved_formatted of this Stats.  # noqa: E501
        :rtype: str
        """
        return self._approved_formatted

    @approved_formatted.setter
    def approved_formatted(self, approved_formatted):
        """Sets the approved_formatted of this Stats.


        :param approved_formatted: The approved_formatted of this Stats.  # noqa: E501
        :type: str
        """

        self._approved_formatted = approved_formatted

    @property
    def rejected_formatted(self):
        """Gets the rejected_formatted of this Stats.  # noqa: E501


        :return: The rejected_formatted of this Stats.  # noqa: E501
        :rtype: str
        """
        return self._rejected_formatted

    @rejected_formatted.setter
    def rejected_formatted(self, rejected_formatted):
        """Sets the rejected_formatted of this Stats.


        :param rejected_formatted: The rejected_formatted of this Stats.  # noqa: E501
        :type: str
        """

        self._rejected_formatted = rejected_formatted

    @property
    def draft_formatted(self):
        """Gets the draft_formatted of this Stats.  # noqa: E501


        :return: The draft_formatted of this Stats.  # noqa: E501
        :rtype: str
        """
        return self._draft_formatted

    @draft_formatted.setter
    def draft_formatted(self, draft_formatted):
        """Sets the draft_formatted of this Stats.


        :param draft_formatted: The draft_formatted of this Stats.  # noqa: E501
        :type: str
        """

        self._draft_formatted = draft_formatted

    @property
    def translated_formatted(self):
        """Gets the translated_formatted of this Stats.  # noqa: E501


        :return: The translated_formatted of this Stats.  # noqa: E501
        :rtype: str
        """
        return self._translated_formatted

    @translated_formatted.setter
    def translated_formatted(self, translated_formatted):
        """Sets the translated_formatted of this Stats.


        :param translated_formatted: The translated_formatted of this Stats.  # noqa: E501
        :type: str
        """

        self._translated_formatted = translated_formatted

    @property
    def approved_perc(self):
        """Gets the approved_perc of this Stats.  # noqa: E501


        :return: The approved_perc of this Stats.  # noqa: E501
        :rtype: float
        """
        return self._approved_perc

    @approved_perc.setter
    def approved_perc(self, approved_perc):
        """Sets the approved_perc of this Stats.


        :param approved_perc: The approved_perc of this Stats.  # noqa: E501
        :type: float
        """

        self._approved_perc = approved_perc

    @property
    def rejected_perc(self):
        """Gets the rejected_perc of this Stats.  # noqa: E501


        :return: The rejected_perc of this Stats.  # noqa: E501
        :rtype: float
        """
        return self._rejected_perc

    @rejected_perc.setter
    def rejected_perc(self, rejected_perc):
        """Sets the rejected_perc of this Stats.


        :param rejected_perc: The rejected_perc of this Stats.  # noqa: E501
        :type: float
        """

        self._rejected_perc = rejected_perc

    @property
    def draft_perc(self):
        """Gets the draft_perc of this Stats.  # noqa: E501


        :return: The draft_perc of this Stats.  # noqa: E501
        :rtype: float
        """
        return self._draft_perc

    @draft_perc.setter
    def draft_perc(self, draft_perc):
        """Sets the draft_perc of this Stats.


        :param draft_perc: The draft_perc of this Stats.  # noqa: E501
        :type: float
        """

        self._draft_perc = draft_perc

    @property
    def translated_perc(self):
        """Gets the translated_perc of this Stats.  # noqa: E501


        :return: The translated_perc of this Stats.  # noqa: E501
        :rtype: float
        """
        return self._translated_perc

    @translated_perc.setter
    def translated_perc(self, translated_perc):
        """Sets the translated_perc of this Stats.


        :param translated_perc: The translated_perc of this Stats.  # noqa: E501
        :type: float
        """

        self._translated_perc = translated_perc

    @property
    def progress_perc(self):
        """Gets the progress_perc of this Stats.  # noqa: E501


        :return: The progress_perc of this Stats.  # noqa: E501
        :rtype: float
        """
        return self._progress_perc

    @progress_perc.setter
    def progress_perc(self, progress_perc):
        """Sets the progress_perc of this Stats.


        :param progress_perc: The progress_perc of this Stats.  # noqa: E501
        :type: float
        """

        self._progress_perc = progress_perc

    @property
    def translated_perc_formatted(self):
        """Gets the translated_perc_formatted of this Stats.  # noqa: E501


        :return: The translated_perc_formatted of this Stats.  # noqa: E501
        :rtype: float
        """
        return self._translated_perc_formatted

    @translated_perc_formatted.setter
    def translated_perc_formatted(self, translated_perc_formatted):
        """Sets the translated_perc_formatted of this Stats.


        :param translated_perc_formatted: The translated_perc_formatted of this Stats.  # noqa: E501
        :type: float
        """

        self._translated_perc_formatted = translated_perc_formatted

    @property
    def draft_perc_formatted(self):
        """Gets the draft_perc_formatted of this Stats.  # noqa: E501


        :return: The draft_perc_formatted of this Stats.  # noqa: E501
        :rtype: float
        """
        return self._draft_perc_formatted

    @draft_perc_formatted.setter
    def draft_perc_formatted(self, draft_perc_formatted):
        """Sets the draft_perc_formatted of this Stats.


        :param draft_perc_formatted: The draft_perc_formatted of this Stats.  # noqa: E501
        :type: float
        """

        self._draft_perc_formatted = draft_perc_formatted

    @property
    def approved_perc_formatted(self):
        """Gets the approved_perc_formatted of this Stats.  # noqa: E501


        :return: The approved_perc_formatted of this Stats.  # noqa: E501
        :rtype: float
        """
        return self._approved_perc_formatted

    @approved_perc_formatted.setter
    def approved_perc_formatted(self, approved_perc_formatted):
        """Sets the approved_perc_formatted of this Stats.


        :param approved_perc_formatted: The approved_perc_formatted of this Stats.  # noqa: E501
        :type: float
        """

        self._approved_perc_formatted = approved_perc_formatted

    @property
    def rejected_perc_formatted(self):
        """Gets the rejected_perc_formatted of this Stats.  # noqa: E501


        :return: The rejected_perc_formatted of this Stats.  # noqa: E501
        :rtype: float
        """
        return self._rejected_perc_formatted

    @rejected_perc_formatted.setter
    def rejected_perc_formatted(self, rejected_perc_formatted):
        """Sets the rejected_perc_formatted of this Stats.


        :param rejected_perc_formatted: The rejected_perc_formatted of this Stats.  # noqa: E501
        :type: float
        """

        self._rejected_perc_formatted = rejected_perc_formatted

    @property
    def progress_perc_formatted(self):
        """Gets the progress_perc_formatted of this Stats.  # noqa: E501


        :return: The progress_perc_formatted of this Stats.  # noqa: E501
        :rtype: float
        """
        return self._progress_perc_formatted

    @progress_perc_formatted.setter
    def progress_perc_formatted(self, progress_perc_formatted):
        """Sets the progress_perc_formatted of this Stats.


        :param progress_perc_formatted: The progress_perc_formatted of this Stats.  # noqa: E501
        :type: float
        """

        self._progress_perc_formatted = progress_perc_formatted

    @property
    def todo_formatted(self):
        """Gets the todo_formatted of this Stats.  # noqa: E501


        :return: The todo_formatted of this Stats.  # noqa: E501
        :rtype: str
        """
        return self._todo_formatted

    @todo_formatted.setter
    def todo_formatted(self, todo_formatted):
        """Sets the todo_formatted of this Stats.


        :param todo_formatted: The todo_formatted of this Stats.  # noqa: E501
        :type: str
        """

        self._todo_formatted = todo_formatted

    @property
    def download_status(self):
        """Gets the download_status of this Stats.  # noqa: E501


        :return: The download_status of this Stats.  # noqa: E501
        :rtype: str
        """
        return self._download_status

    @download_status.setter
    def download_status(self, download_status):
        """Sets the download_status of this Stats.


        :param download_status: The download_status of this Stats.  # noqa: E501
        :type: str
        """

        self._download_status = download_status

    @property
    def analysis_complete(self):
        """Gets the analysis_complete of this Stats.  # noqa: E501


        :return: The analysis_complete of this Stats.  # noqa: E501
        :rtype: str
        """
        return self._analysis_complete

    @analysis_complete.setter
    def analysis_complete(self, analysis_complete):
        """Sets the analysis_complete of this Stats.


        :param analysis_complete: The analysis_complete of this Stats.  # noqa: E501
        :type: str
        """

        self._analysis_complete = analysis_complete

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(Stats, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, Stats):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
